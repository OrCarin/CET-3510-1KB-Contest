	;; cycle_old.asm
	;; Cycles LEDs on pins 8-12
	;; r18 is used to store which LED to light
	.nolist
	.include "./m328Pdef.inc" ;Include definitions file
	.list

	.def countOF = r17 	;Use r17 as overflow counter
	
	.org 0x0000		;Set jump for reset
	rjmp RESET
	
	.org 0x0020		;Set jump for overflow interupt
	rjmp OVERFLOW
RESET:				  
	ldi r16, 0b00000101	;Set clock scaling to 1/1024
	out TCCR0B, r16		;See Datasheet 107-108 for more info
	;; Since clock speed 20 MHz,
	;; counter will increment at about 19.53 kHz when scaled
	;; Therefore, overflow counter increments at about 76.29 Hz
	
	ldi r16, 0b00000001	;Enable timer overflow interrupts
	sts TIMSK0, r16		;See Datasheet 109 for more info
	
	sei			;Enable global interrupts
	
	ldi r16, 0b00000000	;Reset counter to zero
	out TCNT0, r16

	ldi r16, 0b00011111	;Set pins 8-12 as output
	out DDRB, r16

	ldi r18, 0b00000001	;Turn on first LED
	out PortB, r18		;Write HIGH to pins

LOOP:	
	ldi r16, 30		;Delay for ~500ms
	rcall DELAY
	
	cpi r18, 0b00100000	;Reset
	brlo PC+2
	ldi r18, 0b00000001	;Turn on first LED
	
	out PortB, r18		;Write HIGH to pins
	lsl r18, 1		;Shift by 1 bit
	
	rjmp LOOP		;Loop forever 

DELAY:				;Wait about r16/60 seconds
	clr countOF		;Reset overflow counter	
	cp  countOF, r16	;Compare counter with r16
	brlt PC-1		;Loop until counter > r16
	ret			;Return
	
OVERFLOW:
	inc countOF
	reti			;Return after interupt
